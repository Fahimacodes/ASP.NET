// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SportsEvents.Models;
using System;

namespace SportsEvents.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SportsEvents.Models.Admin", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("AdminID");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("SportsEvents.Models.Events", b =>
                {
                    b.Property<int>("EventsID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AdminID");

                    b.Property<DateTime>("EventDate");

                    b.Property<string>("EventDescription");

                    b.Property<string>("EventLocation");

                    b.Property<string>("EventName");

                    b.Property<DateTime>("EventTime");

                    b.Property<string>("EventType");

                    b.Property<int?>("SportID");

                    b.HasKey("EventsID");

                    b.HasIndex("AdminID");

                    b.HasIndex("SportID");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("SportsEvents.Models.Sport", b =>
                {
                    b.Property<int>("SportID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("SportDes");

                    b.Property<string>("SportName");

                    b.HasKey("SportID");

                    b.ToTable("Sports");
                });

            modelBuilder.Entity("SportsEvents.Models.UserRegistered", b =>
                {
                    b.Property<int>("UserRegisteredID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AdminID");

                    b.Property<string>("Biography");

                    b.Property<DateTime>("DOB");

                    b.Property<string>("Email");

                    b.Property<int?>("EventsID");

                    b.Property<string>("Gender");

                    b.Property<string>("HouseNo");

                    b.Property<string>("MobileNo");

                    b.Property<string>("Name");

                    b.Property<string>("PostCode");

                    b.Property<string>("Skills");

                    b.Property<string>("StreetName");

                    b.Property<string>("TelephoneNo");

                    b.Property<string>("WorkLocation");

                    b.HasKey("UserRegisteredID");

                    b.HasIndex("AdminID");

                    b.HasIndex("EventsID");

                    b.ToTable("UserRegistered");
                });

            modelBuilder.Entity("SportsEvents.Models.Events", b =>
                {
                    b.HasOne("SportsEvents.Models.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminID");

                    b.HasOne("SportsEvents.Models.Sport", "Sport")
                        .WithMany()
                        .HasForeignKey("SportID");
                });

            modelBuilder.Entity("SportsEvents.Models.UserRegistered", b =>
                {
                    b.HasOne("SportsEvents.Models.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminID");

                    b.HasOne("SportsEvents.Models.Events", "Events")
                        .WithMany()
                        .HasForeignKey("EventsID");
                });
#pragma warning restore 612, 618
        }
    }
}
